{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","type","value","onChange","PersonForm","name","number","handleSubmit","handleNameChange","handleNumberChange","onSubmit","Persons","persons","handleDeleteClick","listing","person","toLowerCase","indexOf","map","key","id","onClick","baseUrl","backend","axios","get","newObject","post","put","delete","Notification","message","length","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","text","newMessage","setNewMessage","showToast","setTimeout","useEffect","personService","then","response","data","event","target","preventDefault","personsCopy","x","pop","window","confirm","catch","err","error","createdPerson","concat","personId","filteredPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ecafb33.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <>\n      <h2>Search</h2>\n      <div>\n        By name:\n        <input type=\"text\" value={filter} onChange={handleFilterChange} />\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  name,\n  number,\n  handleSubmit,\n  handleNameChange,\n  handleNumberChange\n}) => {\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name:\n          <input type=\"text\" value={name} onChange={handleNameChange} />\n        </div>\n        <div>\n          number:\n          <input type=\"text\" value={number} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ filter = \"\", persons, handleDeleteClick }) => {\n  const listing = persons\n    .filter(person => {\n      return person.name.toLowerCase().indexOf(filter.toLowerCase()) > -1;\n    })\n    .map(person => {\n      return (\n        <li key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={handleDeleteClick(person.id)}>Delete</button>\n        </li>\n      );\n    });\n  return <ul>{listing}</ul>;\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst backend = \"http://localhost:3001\";\nconst baseUrl = backend + \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst del = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  delete: del\n};\n","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message.length === 0) {\n    return null;\n  }\n\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [newMessage, setNewMessage] = useState({ type: \"\", text: \"\" });\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const showToast = (text, type = \"success\") => {\n    setNewMessage({ type, text });\n    setTimeout(() => {\n      setNewMessage({ type: \"\", text: \"\" });\n    }, 5000);\n  };\n\n  const handleDeleteClick = personId => event => {\n    const person = persons.filter(person => person.id === personId).pop();\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .delete(personId)\n        .then(() => {\n          const filteredPersons = persons.filter(\n            person => person.id !== personId\n          );\n          setPersons(filteredPersons);\n          showToast(`Person ${person.name} deleted`);\n        })\n        .catch(err => {\n          showToast(`Failed to delete person`, \"error\");\n        });\n    }\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personsCopy = persons.map(x => x);\n    const person = personsCopy.filter(person => person.name === newName).pop();\n    if (person) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook. Update number?`\n        )\n      ) {\n        person.number = newNumber;\n        personService\n          .update(person.id, person)\n          .then(() => {\n            setPersons(personsCopy);\n            showToast(`Person ${person.name} updated`);\n          })\n          .catch(err => {\n            showToast(\n              `Failed to update person: ${err.response.data.error}`,\n              \"error\"\n            );\n          });\n      }\n      setNewName(\"\");\n      setNewNumber(\"\");\n      return;\n    }\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    personService\n      .create(personObject)\n      .then(response => {\n        const createdPerson = response.data;\n        setPersons(persons.concat(createdPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        showToast(`Person ${createdPerson.name} added`);\n      })\n      .catch(err => {\n        showToast(`Failed to add person: ${err.response.data.error}`, \"error\");\n      });\n  };\n\n  const hook = () => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={newMessage.text} type={newMessage.type} />\n      <Filter filter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleSubmit={addPerson}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        filter={newFilter}\n        persons={persons}\n        handleDeleteClick={handleDeleteClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}